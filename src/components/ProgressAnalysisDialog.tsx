
import React from 'react';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog";
import { Button } from "@/components/ui/button";
import { Loader2, BrainIcon, LightbulbIcon } from "lucide-react";
import { Card, CardContent } from "@/components/ui/card";

interface ProgressAnalysisDialogProps {
  open: boolean;
  onOpenChange: (open: boolean) => void;
  analysis: string | null;
  loading: boolean;
  error: string | null;
}

const ProgressAnalysisDialog: React.FC<ProgressAnalysisDialogProps> = ({
  open,
  onOpenChange,
  analysis,
  loading,
  error,
}) => {
  // Parse the markdown-like content from AI response
  const formatContent = (content: string) => {
    if (!content) return '';
    
    // Replace headers
    let formatted = content
      .replace(/^# (.*$)/gim, '<h3 class="text-lg font-semibold mt-4 mb-2">$1</h3>')
      .replace(/^## (.*$)/gim, '<h4 class="text-base font-medium mt-3 mb-1">$1</h4>')
      .replace(/^### (.*$)/gim, '<h5 class="font-medium mt-2 mb-1">$1</h5>');
      
    // Replace bullet points
    formatted = formatted
      .replace(/^\- (.*$)/gim, '<li class="ml-4 list-disc">$1</li>')
      .replace(/^\* (.*$)/gim, '<li class="ml-4 list-disc">$1</li>')
      .replace(/<\/li>\n<li/g, '</li><li');
      
    // Replace line breaks
    formatted = formatted.replace(/\n/g, '<br />');
    
    // Group bullet points in lists
    formatted = formatted.replace(/<li class="ml-4 list-disc">(.*?)<\/li>/g, function(match) {
      return match.replace(/<br \/>/g, ' ');
    });
    
    // Highlight suggested habits section
    if (formatted.includes('Suggested Habits') || formatted.includes('Habit Suggestions')) {
      const suggestionRegex = /(Suggested Habits|Habit Suggestions)(.*?)(<h|$)/gs;
      formatted = formatted.replace(suggestionRegex, '<div class="bg-blue-50 p-3 my-2 rounded-lg border border-blue-100">$1$2</div>$3');
    }
    
    return formatted;
  };

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-2xl glass-effect">
        <DialogHeader>
          <DialogTitle className="flex items-center text-xl">
            <BrainIcon className="h-5 w-5 mr-2 text-primary" />
            AI Progress Analysis & Suggestions
          </DialogTitle>
          <DialogDescription className="text-base">
            Here's an in-depth analysis of your habit tracking progress with personalized suggestions
          </DialogDescription>
        </DialogHeader>
        
        <div className="mt-6 space-y-4">
          {loading && (
            <div className="flex justify-center items-center py-8">
              <Loader2 className="h-8 w-8 animate-spin text-primary" />
              <span className="ml-2 text-lg">Analyzing your progress...</span>
            </div>
          )}
          
          {error && (
            <div className="p-6 bg-destructive/10 text-destructive rounded-xl border border-destructive/20">
              <p className="font-medium mb-2">Error</p>
              <p>{error}</p>
            </div>
          )}
          
          {!loading && !error && analysis && (
            <Card className="overflow-hidden">
              <CardContent className="p-0">
                <div className="p-5 bg-gradient-to-br from-blue-50 to-white border-b">
                  <div className="flex items-center gap-2 mb-3">
                    <LightbulbIcon className="h-5 w-5 text-primary" />
                    <h3 className="font-medium text-primary">Analysis & Insights</h3>
                  </div>
                  
                  <div 
                    className="prose prose-sm md:prose-base prose-headings:mb-2 prose-headings:mt-4 prose-p:my-1 max-w-none" 
                    dangerouslySetInnerHTML={{ __html: formatContent(analysis) }} 
                  />
                </div>
                
                <div className="p-4 bg-muted/20 border-t">
                  <p className="text-xs text-muted-foreground text-center italic">
                    This analysis is generated by AI and should be considered as general guidance.
                    Adjust recommendations to fit your personal situation.
                  </p>
                </div>
              </CardContent>
            </Card>
          )}
          
          <div className="flex justify-end pt-4">
            <Button
              variant="outline"
              onClick={() => onOpenChange(false)}
              className="btn-hover-effect"
            >
              Close
            </Button>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
};

export default ProgressAnalysisDialog;
